// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class CID_10
{
	public class Row
	{
		public string SUBCAT;
		public string CLASSIF;
		public string RESTRSEXO;
		public string CAUSAOBITO;
		public string DESCRICAO;
		public string DESCRABREV;
		public string REFER;
		public string EXCLUIDOS;

	}

	List<Row> rowList = new List<Row>();
	bool isLoaded = false;

	public bool IsLoaded()
	{
		return isLoaded;
	}

	public List<Row> GetRowList()
	{
		return rowList;
	}

	public void Load(TextAsset csv)
	{
		rowList.Clear();
		string[][] grid = CsvParser2.Parse(csv.text);
		for(int i = 1 ; i < grid.Length ; i++)
		{
			Row row = new Row();
			row.SUBCAT = grid[i][0];
			row.CLASSIF = grid[i][1];
			row.RESTRSEXO = grid[i][2];
			row.CAUSAOBITO = grid[i][3];
			row.DESCRICAO = grid[i][4];

			rowList.Add(row);
		}
		isLoaded = true;
	}

	public int NumRows()
	{
		return rowList.Count;
	}

	public Row GetAt(int i)
	{
		if(rowList.Count <= i)
			return null;
		return rowList[i];
	}

	public Row Find_SUBCAT(string find)
	{
		return rowList.Find(x => x.SUBCAT == find);
	}
	public List<Row> FindAll_SUBCAT(string find)
	{
		return rowList.FindAll(x => x.SUBCAT == find);
	}
	public Row Find_CLASSIF(string find)
	{
		return rowList.Find(x => x.CLASSIF == find);
	}
	public List<Row> FindAll_CLASSIF(string find)
	{
		return rowList.FindAll(x => x.CLASSIF == find);
	}
	public Row Find_RESTRSEXO(string find)
	{
		return rowList.Find(x => x.RESTRSEXO == find);
	}
	public List<Row> FindAll_RESTRSEXO(string find)
	{
		return rowList.FindAll(x => x.RESTRSEXO == find);
	}
	public Row Find_CAUSAOBITO(string find)
	{
		return rowList.Find(x => x.CAUSAOBITO == find);
	}
	public List<Row> FindAll_CAUSAOBITO(string find)
	{
		return rowList.FindAll(x => x.CAUSAOBITO == find);
	}
	public Row Find_DESCRICAO(string find)
	{
		return rowList.Find(x => x.DESCRICAO == find);
	}
	public List<Row> FindAll_DESCRICAO(string find)
	{
		return rowList.FindAll(x => x.DESCRICAO == find);
	}
	public Row Find_DESCRABREV(string find)
	{
		return rowList.Find(x => x.DESCRABREV == find);
	}
	public List<Row> FindAll_DESCRABREV(string find)
	{
		return rowList.FindAll(x => x.DESCRABREV == find);
	}
	public Row Find_REFER(string find)
	{
		return rowList.Find(x => x.REFER == find);
	}
	public List<Row> FindAll_REFER(string find)
	{
		return rowList.FindAll(x => x.REFER == find);
	}
	public Row Find_EXCLUIDOS(string find)
	{
		return rowList.Find(x => x.EXCLUIDOS == find);
	}
	public List<Row> FindAll_EXCLUIDOS(string find)
	{
		return rowList.FindAll(x => x.EXCLUIDOS == find);
	}

}